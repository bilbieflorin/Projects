/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import rmi.CalculatorInterface;
import java.rmi.registry.*;
import rmi.CalculatorGeneratorInterface;

/**
 *
 * @author FLORIN
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DisplayArea = new javax.swing.JTextField();
        ButtonSqrt = new javax.swing.JButton();
        ButtonPoint = new javax.swing.JButton();
        ButtonSign = new javax.swing.JButton();
        ButtonEqual = new javax.swing.JButton();
        ButtonPow = new javax.swing.JButton();
        Button0 = new javax.swing.JButton();
        ButtonInvert = new javax.swing.JButton();
        ButtonDiv = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        ButtonMultp = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        ButtonDif = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        ButtonSum = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        ButtonFact = new javax.swing.JButton();
        jButtonMsum = new javax.swing.JButton();
        ButtonMdif = new javax.swing.JButton();
        ButtonMS = new javax.swing.JButton();
        ButtonMR = new javax.swing.JButton();
        ButtonMC = new javax.swing.JButton();
        ButtonC = new javax.swing.JButton();
        ErrorLabel = new javax.swing.JLabel();
        ButtonBackS = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setResizable(false);

        DisplayArea.setEditable(false);
        DisplayArea.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        DisplayArea.setText("0");
        DisplayArea.setAutoscrolls(false);

        ButtonSqrt.setText("âˆšx");
        ButtonSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSqrtActionPerformed(evt);
            }
        });

        ButtonPoint.setText(".");
        ButtonPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPointActionPerformed(evt);
            }
        });

        ButtonSign.setText("-/+");
        ButtonSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSignActionPerformed(evt);
            }
        });

        ButtonEqual.setText("=");
        ButtonEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEqualActionPerformed(evt);
            }
        });

        ButtonPow.setText("x^y");
        ButtonPow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPowActionPerformed(evt);
            }
        });

        Button0.setText("0");
        Button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button0ActionPerformed(evt);
            }
        });

        ButtonInvert.setText("1/x");
        ButtonInvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonInvertActionPerformed(evt);
            }
        });

        ButtonDiv.setText("/");
        ButtonDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDivActionPerformed(evt);
            }
        });

        Button7.setText("7");
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button8.setText("8");
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.setText("9");
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        ButtonMultp.setText("*");
        ButtonMultp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMultpActionPerformed(evt);
            }
        });

        Button4.setText("4");
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.setText("5");
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.setText("6");
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        ButtonDif.setText("-");
        ButtonDif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDifActionPerformed(evt);
            }
        });

        Button1.setText("1");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.setText("2");
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        ButtonSum.setText("+");
        ButtonSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSumActionPerformed(evt);
            }
        });

        Button3.setText("3");
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        ButtonFact.setText("x!");
        ButtonFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonFactActionPerformed(evt);
            }
        });

        jButtonMsum.setText("M+");
        jButtonMsum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMsumActionPerformed(evt);
            }
        });

        ButtonMdif.setText("M-");
        ButtonMdif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMdifActionPerformed(evt);
            }
        });

        ButtonMS.setText("MS");
        ButtonMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMSActionPerformed(evt);
            }
        });

        ButtonMR.setText("MR");
        ButtonMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMRActionPerformed(evt);
            }
        });

        ButtonMC.setText("MC");
        ButtonMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMCActionPerformed(evt);
            }
        });

        ButtonC.setText("C");
        ButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCActionPerformed(evt);
            }
        });

        ButtonBackS.setText("<-");
        ButtonBackS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DisplayArea)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ButtonFact, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                                    .addComponent(ButtonC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jButtonMsum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ButtonBackS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ButtonMdif, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonMS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ButtonMR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonMC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonPow, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ButtonInvert)
                                    .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ButtonMultp, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonDiv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(7, 7, 7)
                                            .addComponent(ButtonPoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(5, 5, 5)
                                            .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(ButtonSum, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ButtonSign)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ButtonEqual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(4, 4, 4)
                                        .addComponent(ButtonDif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(1, 1, 1)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisplayArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonMC, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonMS, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonBackS, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonFact, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMsum, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonMdif, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonMR, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonPow, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonInvert, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonDiv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonMultp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDif, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Button3, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(ButtonSum, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(Button1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(Button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSign, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonEqual, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void ButtonPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPointActionPerformed
        // TODO add your handling code here:
        String number = DisplayArea.getText();
        if(!pointDeployed){
            if(number.length() <= 16){
                if(!numberIncomplet){
                    DisplayArea.setText("0.");
                    numberIncomplet = true;
                }
                else{
                    number = number+".";
                    DisplayArea.setText(number);
                }
            }
            pointDeployed = true;
        }                
    }//GEN-LAST:event_ButtonPointActionPerformed

    private void ButtonSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSignActionPerformed
        // TODO add your handling code here:
        String number = DisplayArea.getText();
        if(number.charAt(0)=='-')
            number = number.substring(1);
        else
            number = "-" + number;
        DisplayArea.setText(number);
    }//GEN-LAST:event_ButtonSignActionPerformed

    private void ButtonEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEqualActionPerformed
        // TODO add your handling code here:
        if(operationDeployed)
           execute('=');
        
    }//GEN-LAST:event_ButtonEqualActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        write(3);
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        write(2);
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        write(1);
    }//GEN-LAST:event_Button1ActionPerformed

    private void ButtonMdifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMdifActionPerformed
        // TODO add your handling code here:
        try {
            if(connected){
            calculator.setcurent(this.getNumber());
            calculator.memorydif();
            }
        } catch (RemoteException ex) {
            ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonMdifActionPerformed

    private void ButtonMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMSActionPerformed
        try {
            // TODO add your handling code here:
            if(connected)
                calculator.memoryset(this.getNumber());
        } catch (RemoteException ex) {
            ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonMSActionPerformed

    private void ButtonMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMRActionPerformed
        try {
            if(connected){
                displayMessage(calculator.memoryread());
                calculator.setcurent(calculator.memoryread());
            }
        } catch (RemoteException ex) {
           ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonMRActionPerformed

    private void ButtonMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMCActionPerformed
        // TODO add your handling code here:
        try{
            if(connected)
                calculator.memoryfree();
        }
        catch(RemoteException e){
            ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonMCActionPerformed

    private void ButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCActionPerformed
        try {
            // TODO add your handling code here:
            if(connected)
                calculator.free();
            displayMessage(0);
            pointDeployed = false;
            numberIncomplet = false;
            operationDeployed = false;
            operation = '=';
            ErrorLabel.setText("");
        } catch (RemoteException ex) {
            ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonCActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        // TODO add your handling code here:
        write(9);
    }//GEN-LAST:event_Button9ActionPerformed

    private void ButtonBackSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackSActionPerformed
        // TODO add your handling code here:
        String s = DisplayArea.getText();
        if(numberIncomplet)
            if(s.length()>1)
                DisplayArea.setText(s.substring(0, s.length()-1));
            else
                DisplayArea.setText("0");
    }//GEN-LAST:event_ButtonBackSActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        write(4);
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        // TODO add your handling code here:
        write(5);
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        // TODO add your handling code here:
        write(6);
    }//GEN-LAST:event_Button6ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        // TODO add your handling code here:
        write(7);
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        // TODO add your handling code here:
       write(8);
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button0ActionPerformed
        // TODO add your handling code here:
        write(0);
    }//GEN-LAST:event_Button0ActionPerformed

    private void jButtonMsumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMsumActionPerformed
        try {
            if(connected){
            calculator.setcurent(this.getNumber());
            calculator.memorysum();
            }
        } catch (RemoteException ex) {
            ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_jButtonMsumActionPerformed

    private void ButtonFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonFactActionPerformed
        try {
            // TODO add your handling code here:
            if(connected){
                calculator.setcurent(this.getNumber());
                double a = calculator.factorial();
                displayMessage(a);
            }
        } catch (RemoteException ex) {
           ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonFactActionPerformed

    private void ButtonSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSqrtActionPerformed
        // TODO add your handling code here:
        try {
            if(connected){
              if(this.getNumber()>=0){
                calculator.setcurent(this.getNumber());
                displayMessage(calculator.radical());
              }
              else
                  ErrorLabel.setText("Invalid input!");
            }
        } catch (RemoteException ex) {
           ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonSqrtActionPerformed

    private void ButtonInvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonInvertActionPerformed
        // TODO add your handling code here:
        try {
            if(connected){
                if(this.getNumber()!=0){
                    calculator.setcurent(this.getNumber());
                    displayMessage(calculator.invers());
                }
                else
                    ErrorLabel.setText("Invalid number!");
            }
        } catch (RemoteException ex) {
           ErrorLabel.setText("Connection reset!");
        }
    }//GEN-LAST:event_ButtonInvertActionPerformed

    private void ButtonPowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPowActionPerformed
        // TODO add your handling code here:
        if(operationDeployed)
            execute('^');
        else{
            operationDeployed = true;
            execute('^');
            try {
                calculator.setcurent(this.getNumber());
            } catch (RemoteException ex) {
               ErrorLabel.setText("Connection reset!");
            }
        }
            
    }//GEN-LAST:event_ButtonPowActionPerformed

    private void ButtonDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDivActionPerformed
        // TODO add your handling code here:
        if(operationDeployed)
            execute('/');
        else{
            operationDeployed = true;
            execute('/');
            try {
                calculator.setcurent(this.getNumber());
            } catch (RemoteException ex) {
               ErrorLabel.setText("Connection reset!");
            }
        }
        
    }//GEN-LAST:event_ButtonDivActionPerformed

    private void ButtonMultpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMultpActionPerformed
        // TODO add your handling code here:
        if(operationDeployed)
            execute('*');
        else{
            operationDeployed = true;
            execute('*');
            try {
                calculator.setcurent(this.getNumber());
            } catch (RemoteException ex) {
               ErrorLabel.setText("Connection reset!");
            }
        }
    }//GEN-LAST:event_ButtonMultpActionPerformed

    private void ButtonDifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDifActionPerformed
        // TODO add your handling code here:
        if(operationDeployed)
            execute('-');
        else{
            operationDeployed = true;
            execute('-');
            try {
                calculator.setcurent(this.getNumber());
            } catch (RemoteException ex) {
               ErrorLabel.setText("Connection reset!");
            }
        }
    }//GEN-LAST:event_ButtonDifActionPerformed

    private void ButtonSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSumActionPerformed
        // TODO add your handling code here:
        if(operationDeployed){
           execute('+');
         }
        else{
            operationDeployed = true;
            execute('+');
            try {
                calculator.setcurent(this.getNumber());
            } catch (RemoteException ex) {
               ErrorLabel.setText("Connection reset!");
            }
        }
    }//GEN-LAST:event_ButtonSumActionPerformed
    
    private static void connect() {
        try {
            Registry reg = LocateRegistry.getRegistry("localhost", 1099);
            try {
                CalculatorGeneratorInterface calculatorGenerator = (CalculatorGeneratorInterface) reg.lookup("Calculator");
                try {
                    calculator = calculatorGenerator.server_propriu();
                    connected = true;
                    
                } catch (Exception ex) {
                    ErrorLabel.setText("Connection refused!");
                }
            } catch (    NotBoundException | AccessException ex) {
                ErrorLabel.setText("Connection refused!");
            }
        } catch (RemoteException ex) {
            ErrorLabel.setText("Connection refused!");
        }
 }
    
    private double getNumber(){
    String number = DisplayArea.getText();
    return Double.parseDouble(number);
}
    
    private void displayMessage(double a) {
        if(a==Math.floor(a))
            DisplayArea.setText((int)a+"");
        else
            DisplayArea.setText(a+"");
    }
    
    private void write(int c){
        String number = DisplayArea.getText();
        if(number.equals("0") || numberIncomplet==false){
            numberIncomplet = true;
            DisplayArea.setText(c+"");
        }
        else
          if(number.length() <= 16) {  
                number = number+c;
                DisplayArea.setText(number);
        }
    } 
    
    private void execute(char newOperation){
        try{
          if(numberIncomplet)  
            switch(operation){
                case '+':{
                    displayMessage(calculator.adunare(this.getNumber()));
                    numberIncomplet = false;
                    pointDeployed = false;
                    break;
                }
                case '-':{
                    displayMessage((calculator.scadere(this.getNumber())));
                    numberIncomplet = false;
                    pointDeployed = false;
                    break;
                }
                case '*':{
                    displayMessage((calculator.inmultire(this.getNumber())));
                    numberIncomplet = false;
                    pointDeployed = false;
                    break; 
                }
                case '/':{
                    if(this.getNumber()!=0){
                        displayMessage((calculator.impartire(this.getNumber())));
                        numberIncomplet = false;
                        pointDeployed = false;
                    }
                    else{
                        ErrorLabel.setText("Invalid number!");
                        operationDeployed = false;                    }
                    break;    
                }
                case '^':{
                    displayMessage((calculator.putere(this.getNumber())));
                    numberIncomplet = false;
                    pointDeployed = false;
                    break;
                }
                case '=' :{
                    numberIncomplet = false;
                    pointDeployed = false;
                    break;
                }
         
                default :break;
            }
          operation = newOperation;  
        }
        catch(RemoteException ex){
            ErrorLabel.setText("Connection reset!");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
        connect();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button0;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton ButtonBackS;
    private javax.swing.JButton ButtonC;
    private javax.swing.JButton ButtonDif;
    private javax.swing.JButton ButtonDiv;
    private javax.swing.JButton ButtonEqual;
    private javax.swing.JButton ButtonFact;
    private javax.swing.JButton ButtonInvert;
    private javax.swing.JButton ButtonMC;
    private javax.swing.JButton ButtonMR;
    private javax.swing.JButton ButtonMS;
    private javax.swing.JButton ButtonMdif;
    private javax.swing.JButton ButtonMultp;
    private javax.swing.JButton ButtonPoint;
    private javax.swing.JButton ButtonPow;
    private javax.swing.JButton ButtonSign;
    private javax.swing.JButton ButtonSqrt;
    private javax.swing.JButton ButtonSum;
    private static javax.swing.JTextField DisplayArea;
    private static javax.swing.JLabel ErrorLabel;
    private javax.swing.JButton jButtonMsum;
    // End of variables declaration//GEN-END:variables
   private static CalculatorInterface calculator;
   private boolean  pointDeployed = false;
   private boolean  operationDeployed = false;
   private boolean  numberIncomplet = true;
   private static boolean connected = false;
   private char operation = '=';   
}